<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
   <!-- 로그인 실패 조회와 같이 메서드 목적성의 맞게 LOCK_TIME만 조회하면 되지만 
   		특정 유저의 모든 컬럼값을 반환함 이유는 다른 메서드(유저 잠금상태확인 등)에서
   		getLoginFailure 즉 로그인 실패 메서드를 실행후 반환된 Dto를 공용으로
   		활용하기 때문임. 또한 마이바티스는 각 컬럼에대한 AS(별칭) 을 지어주지 않아도
   		매핑이 되지만 데이터베이스의 어느 컬럼에 매핑이 되는지를 명시적으로 보여주며 
   		사용되는 Dto 객체의 어느 필드 변수 값에 매핑되는지 명시적으로 보여주기 위함임.  -->
   		
<mapper namespace="org.iclass.wos.mapper.LoginSecurityMapper">
    <!-- 로그인 활동 로깅 -->
    <insert id="insertLoginActivity" parameterType="LoginActivityDto">
        INSERT INTO LOGIN_ACTIVITY (
            ACTIVITY_ID, USER_ID, LOGIN_TIME, IP_ADDRESS, USER_AGENT, LOGIN_STATUS, LOGIN_TYPE
        ) VALUES (
            login_activity_seq.NEXTVAL, 
            #{userId}, 
            #{loginTime, jdbcType=TIMESTAMP}, 
            #{ipAddress}, 
            #{userAgent}, 
            #{loginStatus}, 
            #{loginType}
        )
    </insert>
    
    <!-- 로그인 실패 조회 -->
    <select id="getLoginFailure" parameterType="string" resultType="LoginFailureDto">
        SELECT 
            USER_ID AS userId, 
            FAIL_COUNT AS failCount, 
            LAST_FAIL_TIME AS lastFailTime, 
            IS_LOCKED AS isLocked, 
            LOCK_TIME AS lockTime
        FROM LOGIN_FAILURE
        WHERE USER_ID = #{userId}
    </select>
    
    <!-- 로그인 실패 추가 -->
    <insert id="insertLoginFailure" parameterType="string">
        INSERT INTO LOGIN_FAILURE (
            USER_ID, FAIL_COUNT, LAST_FAIL_TIME, IS_LOCKED
        ) VALUES (
            #{userId}, 1, CURRENT_TIMESTAMP, 0
        )
    </insert>
    
    <!-- 로그인 실패 업데이트 -->
    <update id="updateLoginFailure" parameterType="LoginFailureDto">
        UPDATE LOGIN_FAILURE
        SET 
            FAIL_COUNT = #{failCount},
            LAST_FAIL_TIME = CURRENT_TIMESTAMP
        WHERE USER_ID = #{userId}
    </update>
    
    <!-- 계정 잠금 -->
    <update id="lockAccount" parameterType="string">
        UPDATE LOGIN_FAILURE
        SET 
            IS_LOCKED = 1,
            LOCK_TIME = CURRENT_TIMESTAMP
        WHERE USER_ID = #{userId}
    </update>
    
    <!-- 계정 잠금해제 -->
    <update id="unlockAccount" parameterType="string">
        UPDATE LOGIN_FAILURE
        SET 
            IS_LOCKED = 0,
            FAIL_COUNT = 0,
            LOCK_TIME = NULL
        WHERE USER_ID = #{userId}
    </update>
    
    <!-- 잠긴 계정 목록 조회 -->
    <select id="getLockedAccounts" resultType="LoginFailureDto">
    SELECT 
        USER_ID AS userId, 
        FAIL_COUNT AS failCount, 
        LAST_FAIL_TIME AS lastFailTime, 
        IS_LOCKED AS isLocked, 
        LOCK_TIME AS lockTime
    FROM LOGIN_FAILURE
    WHERE IS_LOCKED = 1
    ORDER BY LOCK_TIME DESC
</select>
</mapper>